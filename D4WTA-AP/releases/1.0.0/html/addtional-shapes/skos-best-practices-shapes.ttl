@prefix : <http://example.com/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix sdo: <https://schema.org> .


# declare the skos prefix to use it in later SPARQL-based constraints
skos:
  a owl:Ontology ;
  owl:imports sh: ;
  sh:declare [
    sh:prefix "skos" ;
    sh:namespace "http://www.w3.org/2004/02/skos/core#"^^xsd:anyURI ;
  ] .

:EmptyLabels
  a sh:NodeShape ;
  sh:targetClass skos:Concept ;
  sh:severity sh:Warning ;
  rdfs:comment "Empty Labels" ;
  sh:description "Labels also need to contain textual information to be useful, thus we find all SKOS labels with length 0 (after removing whitespaces)." ;
  sh:message "Label with an empty value detected" ;
  sh:sparql [
    a sh:SPARQLConstraint ;
    sh:prefixes skos: ;
    sh:select """
    SELECT $this ?path (?lab as ?value) (lang(?lab) as ?lang)
    WHERE {
      $this a skos:Concept .
      {
      SELECT $this ?path ?lab 
      WHERE{
        $this skos:prefLabel | skos:altLabel | skos:hiddenLabel ?lab .
        $this ?path ?lab .
        bind ( strlen(?lab) as ?q)
        FILTER ( ?q=0 )
        }
      }
    }""" ;
  ] ;
.

# changed ?this to $this
# changed sh:message to provide more meaning
:OverlappingLabels
  a sh:NodeShape ;
  sh:targetClass skos:Concept ;
  sh:severity sh:Warning ;
  sh:sparql [
    a sh:SPARQLConstraint ;
    sh:prefixes skos: ;
    rdfs:comment "Overlapping Labels (concepts with the same label, independent of concept scheme )" ;
    sh:description "This is a generalization of a recommendation in the SKOS primer, that “no two concepts have the same preferred lexical label in a given language when they belong to the same concept scheme”. This could indicate missing disambiguation information and thus lead to problems in autocompletion application." ;
    sh:message "Overlapping Labels (there is concept '{$this}' with the same pref label in language '{$lang}' for concept '{$value}')" ;
    sh:select """
    SELECT $this (skos:prefLabel AS ?path) (?other as ?value) (lang(?pl) as ?lang)
    WHERE {
      ?this  skos:prefLabel ?pl .
      ?other skos:prefLabel ?opl .
      ?other a skos:Concept .
      FILTER ($this != ?other && ?pl = ?opl)
    }""" ;
  ] ;
.

# added | skos:topConceptOf in SPARQL query
# changed sh:message to provide more meaning
:OverlappingLabelsInSameConceptScheme
  a sh:NodeShape ;
  sh:targetClass skos:Concept ;
  sh:severity sh:Warning ;
  sh:sparql [
    sh:prefixes skos: ;
    rdfs:comment "Overlapping Labels in the same Concept Scheme (concepts with the same label in the same concept scheme)" ;
    sh:message "Overlapping Labels in the same Concept Scheme (there is concept '{$this}' with the same pref label in language '{$lang}' for concept '{$value}'). Label: '{$pl}" ;
    sh:select """
    SELECT $this (skos:prefLabel AS ?path) (?other as ?value) (lang(?pl) as ?lang) $pl
    WHERE {
      ?this  skos:prefLabel ?pl .
      ?other skos:prefLabel ?opl .
      ?other a skos:Concept .
      ?this skos:inScheme | skos:topConceptOf ?cs .
      ?other skos:inScheme | skos:topConceptOf ?cs .
      FILTER ($this != ?other && ?pl = ?opl)
    }""" ;
  ] ;
.

:TopConceptsHavingBroader
  a sh:NodeShape ;
  sh:targetClass skos:Concept ;
  sh:severity sh:Warning ;
  sh:sparql [
    a sh:SPARQLConstraint ;
    sh:prefixes skos: ;
    rdfs:comment "Top Concept Having Broader Concept" ;
    sh:message "The top concept has a broader concept" ;
    sh:select """
    SELECT DISTINCT $this
    WHERE {
      $this skos:broader | skos:broaderTransitive ?other .
      ?this skos:topConceptOf ?cs .
    }""" ;
  ] ;
